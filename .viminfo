# This viminfo file was generated by Vim 9.1.
# You may edit it if you're careful!

# Viminfo version
|1,4

# Value of 'encoding' when this file was written
*encoding=utf-8


# hlsearch on (H) or off (h):
~h
# Command Line History (newest to oldest):
:q!
|2,0,1720000256,,"q!"
:wq!
|2,0,1720000244,,"wq!"
:%d
|2,0,1719960363,,"%d"

# Search String History (newest to oldest):

# Expression History (newest to oldest):

# Input Line History (newest to oldest):

# Debug Line History (newest to oldest):

# Registers:
""1	LINE	0
	Copy code
	#!/bin/bash
	# Check if the input file exists
	if [ ! -f "$1" ]; then
	    echo "Error: Input file not found."
	    exit 1
	fi
	# Ensure log and secure directories are initialized once
	LOG_FILE="/var/log/user_management.log"
	PASSWORD_FILE="/var/secure/user_passwords.csv"
	# Initialize log file
	if [ ! -f "$LOG_FILE" ]; then
	    sudo touch "$LOG_FILE"
	    sudo chown root:root "$LOG_FILE"
	fi
	# Initialize password file
	if [ ! -f "$PASSWORD_FILE" ]; then
	    sudo mkdir -p /var/secure
	    sudo touch "$PASSWORD_FILE"
	    sudo chown root:root "$PASSWORD_FILE"
	    sudo chmod 600 "$PASSWORD_FILE"
	fi
	# Redirect stdout and stderr to the log file
	exec > >(sudo tee -a "$LOG_FILE") 2>&1
	# Function to check if user exists
	user_exists() {
	    id "$1" &>/dev/null
	}
	# Read each line from the input file
	while IFS=';' read -r username groups; do
	    # Trim whitespace
	    username=$(echo "$username" | tr -d '[:space:]')
	    # Check if the user already exists
	    if user_exists "$username"; then
	        echo "User $username already exists."
	        continue
	    fi
	    # Create user
	    sudo useradd -m "$username"
	    # Create personal group (same as username)
	    sudo groupadd "$username"
	    # Add user to personal group
	    sudo usermod -aG "$username" "$username"
	    # Create home directory
	    sudo mkdir -p "/home/$username"
	    sudo chown "$username:$username" "/home/$username"
	    # Generate random password
	    password=$(openssl rand -base64 12)
	    # Set password for user
	    echo "$username:$password" | sudo chpasswd
|3,1,1,1,50,0,1719960363,"Copy code","#!/bin/bash","# Check if the input file exists","if [ ! -f \"$1\" ]; then","    echo \"Error: Input file not found.\"","    exit 1","fi","# Ensure log and secure directories are initialized once","LOG_FILE=\"/var/log/user_management.log\"","PASSWORD_FILE=\"/var/secure/user_passwords.csv\"","# Initialize log file","if [ ! -f \"$LOG_FILE\" ]; then","    sudo touch \"$LOG_FILE\"","    sudo chown root:root \"$LOG_FILE\"","fi",>28
|<"# Initialize password file","if [ ! -f \"$PASSWORD_FILE\" ]; then","    sudo mkdir -p /var/secure","    sudo touch \"$PASSWORD_FILE\"","    sudo chown root:root \"$PASSWORD_FILE\"","    sudo chmod 600 \"$PASSWORD_FILE\"","fi","# Redirect stdout and stderr to the log file","exec > >(sudo tee -a \"$LOG_FILE\") 2>&1","# Function to check if user exists","user_exists() {","    id \"$1\" &>/dev/null","}","# Read each line from the input file","while IFS=';' read -r username groups; do",>23
|<"    # Trim whitespace","    username=$(echo \"$username\" | tr -d '[:space:]')","    # Check if the user already exists","    if user_exists \"$username\"; then","        echo \"User $username already exists.\"","        continue","    fi","    # Create user","    sudo useradd -m \"$username\"","    # Create personal group (same as username)","    sudo groupadd \"$username\"","    # Add user to personal group","    sudo usermod -aG \"$username\" \"$username\"",>29
|<"    # Create home directory","    sudo mkdir -p \"/home/$username\"","    sudo chown \"$username:$username\" \"/home/$username\"","    # Generate random password","    password=$(openssl rand -base64 12)","    # Set password for user","    echo \"$username:$password\" | sudo chpasswd"
"2	LINE	0
	#!/bin/bash
	
	# Log file and password file paths
	LOG_FILE="/var/log/user_management.log"
	PASSWORD_FILE="/var/secure/user_passwords.txt"
	
	# Create necessary directories and files with appropriate permissions
	mkdir -p /var/secure
	touch "$LOG_FILE"
	touch "$PASSWORD_FILE"
	chmod 600 "$PASSWORD_FILE"
	
	# Check if the input file is provided
	if [ -z "$1" ]; then
	    echo "Usage: $0 <name-of-text-file>"
	    exit 1
	fi
	
	# Read the input file
	INPUT_FILE="$1"
	if [ ! -f "$INPUT_FILE" ]; then
	    echo "Input file not found!"
	    exit 1
	fi
	
	# Process each line in the input file
	while IFS=';' read -r username groups; do
	    # Ignore lines with missing username or groups
	    if [ -z "$username" ] || [ -z "$groups" ]; then
	        continue
	    fi
	
	    username=$(echo "$username" | xargs) # Trim whitespace
	    groups=$(echo "$groups" | xargs | tr ',' ' ') # Trim whitespace and replace commas with spaces
	
	    # Check if user already exists
	    if id "$username" &>/dev/null; then
	        echo "User $username already exists, skipping." | tee -a "$LOG_FILE"
	        continue
	    fi
	
	    # Create user with home directory and personal group
	    useradd -m -s /bin/bash "$username" 2>> "$LOG_FILE"
	    if [ $? -ne 0 ]; then
	        echo "Failed to create user $username." | tee -a "$LOG_FILE"
	        continue
	    fi
	
	    # Create personal group for user
	    groupadd "$username" 2>> "$LOG_FILE"
|3,0,2,1,50,0,1719959745,"#!/bin/bash","","# Log file and password file paths","LOG_FILE=\"/var/log/user_management.log\"","PASSWORD_FILE=\"/var/secure/user_passwords.txt\"","","# Create necessary directories and files with appropriate permissions","mkdir -p /var/secure","touch \"$LOG_FILE\"","touch \"$PASSWORD_FILE\"","chmod 600 \"$PASSWORD_FILE\"","","# Check if the input file is provided","if [ -z \"$1\" ]; then",>44
|<"    echo \"Usage: $0 <name-of-text-file>\"","    exit 1","fi","","# Read the input file","INPUT_FILE=\"$1\"","if [ ! -f \"$INPUT_FILE\" ]; then","    echo \"Input file not found!\"","    exit 1","fi","","# Process each line in the input file","while IFS=';' read -r username groups; do","    # Ignore lines with missing username or groups","    if [ -z \"$username\" ] || [ -z \"$groups\" ]; then","        continue","    fi","",>62
|<"    username=$(echo \"$username\" | xargs) # Trim whitespace","    groups=$(echo \"$groups\" | xargs | tr ',' ' ') # Trim whitespace and replace commas with spaces","","    # Check if user already exists","    if id \"$username\" &>/dev/null; then","        echo \"User $username already exists, skipping.\" | tee -a \"$LOG_FILE\"","        continue","    fi","","    # Create user with home directory and personal group","    useradd -m -s /bin/bash \"$username\" 2>> \"$LOG_FILE\"",>27
|<"    if [ $? -ne 0 ]; then","        echo \"Failed to create user $username.\" | tee -a \"$LOG_FILE\"","        continue","    fi","","    # Create personal group for user","    groupadd \"$username\" 2>> \"$LOG_FILE\""
"3	LINE	0
	#!/bin/bash
	
	# Log file and password file paths
	LOG_FILE="/var/log/user_management.log"
	PASSWORD_FILE="/var/secure/user_passwords.txt"
	
	# Create necessary directories
	mkdir -p /var/secure
	touch "$LOG_FILE"
	touch "$PASSWORD_FILE"
	chmod 600 "$PASSWORD_FILE"
	
	# Check if the input file is provided
	if [ -z "$1" ]; then
	    echo "Usage: $0 <name-of-text-file>"
	    exit 1
	fi
	
	# Read the input file
	INPUT_FILE="$1"
	if [ ! -f "$INPUT_FILE" ]; then
	    echo "Input file not found!"
	    exit 1
	fi
	
	# Process each line in the input file
	while IFS=';' read -r username groups; do
	    username=$(echo "$username" | xargs) # Trim whitespace
	    groups=$(echo "$groups" | xargs | tr ',' ' ') # Trim whitespace and replace commas with spaces
	
	    # Check if user already exists
	    if id "$username" &>/dev/null; then
	        echo "User $username already exists, skipping." | tee -a "$LOG_FILE"
	        continue
	    fi
	
	    # Create user and personal group
	    useradd -m -s /bin/bash -G "$username" "$username" 2>> "$LOG_FILE"
	    if [ $? -ne 0 ]; then
	        echo "Failed to create user $username." | tee -a "$LOG_FILE"
	        continue
	    fi
	
	    # Add user to additional groups
	    if [ -n "$groups" ]; then
	        usermod -aG $groups "$username" 2>> "$LOG_FILE"
	        if [ $? -ne 0 ]; then
	            echo "Failed to add user $username to groups $groups." | tee -a "$LOG_FILE"
	            continue
	        fi
|3,0,3,1,50,0,1719958531,"#!/bin/bash","","# Log file and password file paths","LOG_FILE=\"/var/log/user_management.log\"","PASSWORD_FILE=\"/var/secure/user_passwords.txt\"","","# Create necessary directories","mkdir -p /var/secure","touch \"$LOG_FILE\"","touch \"$PASSWORD_FILE\"","chmod 600 \"$PASSWORD_FILE\"","","# Check if the input file is provided","if [ -z \"$1\" ]; then","    echo \"Usage: $0 <name-of-text-file>\"","    exit 1","fi","",>23
|<"# Read the input file","INPUT_FILE=\"$1\"","if [ ! -f \"$INPUT_FILE\" ]; then","    echo \"Input file not found!\"","    exit 1","fi","","# Process each line in the input file","while IFS=';' read -r username groups; do","    username=$(echo \"$username\" | xargs) # Trim whitespace","    groups=$(echo \"$groups\" | xargs | tr ',' ' ') # Trim whitespace and replace commas with spaces","","    # Check if user already exists","    if id \"$username\" &>/dev/null; then",>82
|<"        echo \"User $username already exists, skipping.\" | tee -a \"$LOG_FILE\"","        continue","    fi","","    # Create user and personal group","    useradd -m -s /bin/bash -G \"$username\" \"$username\" 2>> \"$LOG_FILE\"","    if [ $? -ne 0 ]; then","        echo \"Failed to create user $username.\" | tee -a \"$LOG_FILE\"","        continue","    fi","","    # Add user to additional groups","    if [ -n \"$groups\" ]; then",>61
|<"        usermod -aG $groups \"$username\" 2>> \"$LOG_FILE\"","        if [ $? -ne 0 ]; then","            echo \"Failed to add user $username to groups $groups.\" | tee -a \"$LOG_FILE\"","            continue","        fi"
"4	LINE	0
	#!/bin/bash
	
	# Log file and password file paths
	LOG_FILE="/var/log/user_management.log"
	PASSWORD_FILE="/var/secure/user_passwords.txt"
	
	# Create necessary directories
	mkdir -p /var/secure
	touch "$LOG_FILE"
	touch "$PASSWORD_FILE"
	chmod 600 "$PASSWORD_FILE"
	
	# Check if the input file is provided
	if [ -z "$1" ]; then
	    echo "Usage: $0 <name-of-text-file>"
	    exit 1
	fi
	
	# Read the input file
	INPUT_FILE="$1"
	if [ ! -f "$INPUT_FILE" ]; then
	    echo "Input file not found!"
	    exit 1
	fi
	
	# Process each line in the input file
	while IFS=';' read -r username groups; do
	    username=$(echo "$username" | xargs) # Trim whitespace
	    groups=$(echo "$groups" | xargs | tr ',' ' ') # Trim whitespace and replace commas with spaces
	
	    # Check if user already exists
	    if id "$username" &>/dev/null; then
	        echo "User $username already exists, skipping." | tee -a "$LOG_FILE"
	        continue
	    fi
	
	    # Create user and personal group
	    useradd -m -s /bin/bash -G "$username" "$username" 2>> "$LOG_FILE"
	    if [ $? -ne 0 ]; then
	        echo "Failed to create user $username." | tee -a "$LOG_FILE"
	        continue
	    fi
	
	    # Add user to additional groups
	    if [ -n "$groups" ]; then
	        usermod -aG $groups "$username" 2>> "$LOG_FILE"
	        if [ $? -ne 0 ]; then
	            echo "Failed to add user $username to groups $groups." | tee -a "$LOG_FILE"
	            continue
	        fi
|3,0,4,1,50,0,1719958029,"#!/bin/bash","","# Log file and password file paths","LOG_FILE=\"/var/log/user_management.log\"","PASSWORD_FILE=\"/var/secure/user_passwords.txt\"","","# Create necessary directories","mkdir -p /var/secure","touch \"$LOG_FILE\"","touch \"$PASSWORD_FILE\"","chmod 600 \"$PASSWORD_FILE\"","","# Check if the input file is provided","if [ -z \"$1\" ]; then","    echo \"Usage: $0 <name-of-text-file>\"","    exit 1","fi","",>23
|<"# Read the input file","INPUT_FILE=\"$1\"","if [ ! -f \"$INPUT_FILE\" ]; then","    echo \"Input file not found!\"","    exit 1","fi","","# Process each line in the input file","while IFS=';' read -r username groups; do","    username=$(echo \"$username\" | xargs) # Trim whitespace","    groups=$(echo \"$groups\" | xargs | tr ',' ' ') # Trim whitespace and replace commas with spaces","","    # Check if user already exists","    if id \"$username\" &>/dev/null; then",>82
|<"        echo \"User $username already exists, skipping.\" | tee -a \"$LOG_FILE\"","        continue","    fi","","    # Create user and personal group","    useradd -m -s /bin/bash -G \"$username\" \"$username\" 2>> \"$LOG_FILE\"","    if [ $? -ne 0 ]; then","        echo \"Failed to create user $username.\" | tee -a \"$LOG_FILE\"","        continue","    fi","","    # Add user to additional groups","    if [ -n \"$groups\" ]; then",>61
|<"        usermod -aG $groups \"$username\" 2>> \"$LOG_FILE\"","        if [ $? -ne 0 ]; then","            echo \"Failed to add user $username to groups $groups.\" | tee -a \"$LOG_FILE\"","            continue","        fi"
"5	LINE	0
	#!/bin/bash
	
	# Array of usernames to check
	users=("light" "idimma" "mayowa")
	
	# Array of groups to check
	groups=("light" "idimma" "mayowa")
	
	echo "Checking user accounts:"
	
	# Check each user
	for user in "${users[@]}"; do
	    user_info=$(getent passwd "$user")
	    if [ -n "$user_info" ]; then
	        echo "User $user exists:"
	        echo "$user_info"
	    else
	        echo "User $user does not exist."
	    fi
	    echo
	done
	
	echo "Checking groups:"
	
	# Check each group
	for group in "${groups[@]}"; do
	    group_info=$(getent group "$group")
	    if [ -n "$group_info" ]; then
	        echo "Group $group exists:"
	        echo "$group_info"
	    else
	        echo "Group $group does not exist."
	    fi
	    echo
	done
	
|3,0,5,1,36,0,1719957129,"#!/bin/bash","","# Array of usernames to check","users=(\"light\" \"idimma\" \"mayowa\")","","# Array of groups to check","groups=(\"light\" \"idimma\" \"mayowa\")","","echo \"Checking user accounts:\"","","# Check each user","for user in \"${users[@]}\"; do","    user_info=$(getent passwd \"$user\")","    if [ -n \"$user_info\" ]; then","        echo \"User $user exists:\"","        echo \"$user_info\"","    else",>45
|<"        echo \"User $user does not exist.\"","    fi","    echo","done","","echo \"Checking groups:\"","","# Check each group","for group in \"${groups[@]}\"; do","    group_info=$(getent group \"$group\")","    if [ -n \"$group_info\" ]; then","        echo \"Group $group exists:\"","        echo \"$group_info\"","    else","        echo \"Group $group does not exist.\"","    fi","    echo","done",""
"6	LINE	0
	#!/bin/bash
	
	# Array of usernames to check
	users=("light" "idimma" "mayowa")
	
	# Array of groups to check
	groups=("light" "idimma" "mayowa")
	
	echo "Checking user accounts:"
	
	# Check each user
	for user in "${users[@]}"; do
	    user_info=$(getent passwd "$user")
	    if [ -n "$user_info" ]; then
	        echo "User $user exists:"
	        echo "$user_info"
	    else
	        echo "User $user does not exist."
	    fi
	    echo
	done
	
	echo "Checking groups:"
	
	# Check each group
	for group in "${groups[@]}"; do
	    group_info=$(getent group "$group")
	    if [ -n "$group_info" ]; then
	        echo "Group $group exists:"
	        echo "$group_info"
	    else
	        echo "Group $group does not exist."
	    fi
	    echo
	done
	
|3,0,6,1,36,0,1719956508,"#!/bin/bash","","# Array of usernames to check","users=(\"light\" \"idimma\" \"mayowa\")","","# Array of groups to check","groups=(\"light\" \"idimma\" \"mayowa\")","","echo \"Checking user accounts:\"","","# Check each user","for user in \"${users[@]}\"; do","    user_info=$(getent passwd \"$user\")","    if [ -n \"$user_info\" ]; then","        echo \"User $user exists:\"","        echo \"$user_info\"","    else",>45
|<"        echo \"User $user does not exist.\"","    fi","    echo","done","","echo \"Checking groups:\"","","# Check each group","for group in \"${groups[@]}\"; do","    group_info=$(getent group \"$group\")","    if [ -n \"$group_info\" ]; then","        echo \"Group $group exists:\"","        echo \"$group_info\"","    else","        echo \"Group $group does not exist.\"","    fi","    echo","done",""
"7	LINE	0
	#!/bin/bash
	
	# Array of usernames to check
	users=("light" "idimma" "mayowa")
	
	# Array of groups to check
	groups=("light" "idimma" "mayowa")
	
	echo "Checking user accounts:"
	
	# Check each user
	for user in "${users[@]}"; do
	    user_info=$(getent passwd "$user")
	    if [ -n "$user_info" ]; then
	        echo "User $user exists:"
	        echo "$user_info"
	    else
	        echo "User $user does not exist."
	    fi
	    echo
	done
	
	echo "Checking groups:"
	
	# Check each group
	for group in "${groups[@]}"; do
	    group_info=$(getent group "$group")
	    if [ -n "$group_info" ]; then
	        echo "Group $group exists:"
	        echo "$group_info"
	    else
	        echo "Group $group does not exist."
	    fi
	    echo
	done
	
|3,0,7,1,36,0,1719956320,"#!/bin/bash","","# Array of usernames to check","users=(\"light\" \"idimma\" \"mayowa\")","","# Array of groups to check","groups=(\"light\" \"idimma\" \"mayowa\")","","echo \"Checking user accounts:\"","","# Check each user","for user in \"${users[@]}\"; do","    user_info=$(getent passwd \"$user\")","    if [ -n \"$user_info\" ]; then","        echo \"User $user exists:\"","        echo \"$user_info\"","    else",>45
|<"        echo \"User $user does not exist.\"","    fi","    echo","done","","echo \"Checking groups:\"","","# Check each group","for group in \"${groups[@]}\"; do","    group_info=$(getent group \"$group\")","    if [ -n \"$group_info\" ]; then","        echo \"Group $group exists:\"","        echo \"$group_info\"","    else","        echo \"Group $group does not exist.\"","    fi","    echo","done",""
"8	LINE	0
	#!/bin/bash
	
	# Log file location
	LOG_FILE="/var/log/user_management.log"
	PASSWORD_FILE="/var/secure/user_passwords.csv"
	
	# Create log and password file if they don't exist
	touch $LOG_FILE
	mkdir -p /var/secure
	touch $PASSWORD_FILE
	chmod 600 $PASSWORD_FILE
	
	# Check if a file argument is provided
	if [ $# -ne 1 ]; then
	    echo "Usage: $0 <user-file>" | tee -a $LOG_FILE
	    exit 1
	fi
	
	USER_FILE=$1
	
	# Check if user file exists
	if [ ! -f $USER_FILE ]; then
	    echo "User file $USER_FILE does not exist." | tee -a $LOG_FILE
	    exit 1
	fi
	
	# Read the user file line by line
	while IFS=';' read -r username groups; do
	    username=$(echo "$username" | xargs) # Remove whitespace
	    groups=$(echo "$groups" | xargs | tr ',' ' ') # Remove whitespace and convert to space-separated
	
	    # Check if user already exists
	    if id "$username" &>/dev/null; then
	        echo "User $username already exists, skipping." | tee -a $LOG_FILE
	        continue
	    fi
	
	    # Check if personal group for the user already exists
	    if ! getent group "$username" > /dev/null; then
	        groupadd "$username"
	        if [ $? -ne 0 ]; then
	            echo "Failed to create group $username." | tee -a $LOG_FILE
	            continue
	        fi
	    fi
	
	    # Create any additional groups if they do not exist
	    if [ -n "$groups" ]; then
	        for group in $groups; do
	            if [ -n "$group" ]; then # Check if the group name is not empty
|3,0,8,1,50,0,1719956051,"#!/bin/bash","","# Log file location","LOG_FILE=\"/var/log/user_management.log\"","PASSWORD_FILE=\"/var/secure/user_passwords.csv\"","","# Create log and password file if they don't exist","touch $LOG_FILE","mkdir -p /var/secure","touch $PASSWORD_FILE","chmod 600 $PASSWORD_FILE","","# Check if a file argument is provided","if [ $# -ne 1 ]; then","    echo \"Usage: $0 <user-file>\" | tee -a $LOG_FILE","    exit 1","fi","",>14
|<"USER_FILE=$1","","# Check if user file exists","if [ ! -f $USER_FILE ]; then","    echo \"User file $USER_FILE does not exist.\" | tee -a $LOG_FILE","    exit 1","fi","","# Read the user file line by line","while IFS=';' read -r username groups; do","    username=$(echo \"$username\" | xargs) # Remove whitespace","    groups=$(echo \"$groups\" | xargs | tr ',' ' ') # Remove whitespace and convert to space-separated","","    # Check if user already exists",>43
|<"    if id \"$username\" &>/dev/null; then","        echo \"User $username already exists, skipping.\" | tee -a $LOG_FILE","        continue","    fi","","    # Check if personal group for the user already exists","    if ! getent group \"$username\" > /dev/null; then","        groupadd \"$username\"","        if [ $? -ne 0 ]; then","            echo \"Failed to create group $username.\" | tee -a $LOG_FILE","            continue","        fi","    fi","",>57
|<"    # Create any additional groups if they do not exist","    if [ -n \"$groups\" ]; then","        for group in $groups; do","            if [ -n \"$group\" ]; then # Check if the group name is not empty"
"9	LINE	0
	#!/bin/bash
	
	# Log file location
	LOG_FILE="/var/log/user_management.log"
	PASSWORD_FILE="/var/secure/user_passwords.csv"
	
	# Create log and password file if they don't exist
	touch $LOG_FILE
	mkdir -p /var/secure
	touch $PASSWORD_FILE
	chmod 600 $PASSWORD_FILE
	
	# Check if a file argument is provided
	if [ $# -ne 1 ]; then
	    echo "Usage: $0 <user-file>" | tee -a $LOG_FILE
	    exit 1
	fi
	
	USER_FILE=$1
	
	# Check if user file exists
	if [ ! -f $USER_FILE ]; then
	    echo "User file $USER_FILE does not exist." | tee -a $LOG_FILE
	    exit 1
	fi
	
	# Read the user file line by line
	while IFS=';' read -r username groups; do
	    username=$(echo "$username" | xargs) # Remove whitespace
	    groups=$(echo "$groups" | xargs | tr ',' ' ') # Remove whitespace and convert to space-separated
	
	    # Check if user already exists
	    if id "$username" &>/dev/null; then
	        echo "User $username already exists, skipping." | tee -a $LOG_FILE
	        continue
	    fi
	
	    # Check if personal group for the user already exists
	    if ! getent group "$username" > /dev/null; then
	        groupadd "$username"
	        if [ $? -ne 0 ]; then
	            echo "Failed to create group $username." | tee -a $LOG_FILE
	            continue
	        fi
	    fi
	
	    # Create any additional groups if they do not exist
	    for group in $groups; do
	        if [ -n "$group" ]; then # Check if the group name is not empty
	            if ! getent group "$group" > /dev/null; then
|3,0,9,1,50,0,1719955516,"#!/bin/bash","","# Log file location","LOG_FILE=\"/var/log/user_management.log\"","PASSWORD_FILE=\"/var/secure/user_passwords.csv\"","","# Create log and password file if they don't exist","touch $LOG_FILE","mkdir -p /var/secure","touch $PASSWORD_FILE","chmod 600 $PASSWORD_FILE","","# Check if a file argument is provided","if [ $# -ne 1 ]; then","    echo \"Usage: $0 <user-file>\" | tee -a $LOG_FILE","    exit 1","fi","",>14
|<"USER_FILE=$1","","# Check if user file exists","if [ ! -f $USER_FILE ]; then","    echo \"User file $USER_FILE does not exist.\" | tee -a $LOG_FILE","    exit 1","fi","","# Read the user file line by line","while IFS=';' read -r username groups; do","    username=$(echo \"$username\" | xargs) # Remove whitespace","    groups=$(echo \"$groups\" | xargs | tr ',' ' ') # Remove whitespace and convert to space-separated","","    # Check if user already exists",>43
|<"    if id \"$username\" &>/dev/null; then","        echo \"User $username already exists, skipping.\" | tee -a $LOG_FILE","        continue","    fi","","    # Check if personal group for the user already exists","    if ! getent group \"$username\" > /dev/null; then","        groupadd \"$username\"","        if [ $? -ne 0 ]; then","            echo \"Failed to create group $username.\" | tee -a $LOG_FILE","            continue","        fi","    fi","",>57
|<"    # Create any additional groups if they do not exist","    for group in $groups; do","        if [ -n \"$group\" ]; then # Check if the group name is not empty","            if ! getent group \"$group\" > /dev/null; then"

# File marks:
'0  33  0  ~/styles.css
|4,48,33,0,1720000256,"~/styles.css"
'1  32  0  ~/index.html
|4,49,32,0,1720000244,"~/index.html"
'2  4  0  ~/script.js
|4,50,4,0,1719999969,"~/script.js"
'3  33  0  ~/styles.css
|4,51,33,0,1719999941,"~/styles.css"
'4  32  0  ~/index.html
|4,52,32,0,1719999891,"~/index.html"
'5  73  0  ~/user_management/README.md
|4,53,73,0,1719996059,"~/user_management/README.md"
'6  69  40  ~/user_management/README.md
|4,54,69,40,1719961130,"~/user_management/README.md"
'7  69  40  ~/user_management/README.md
|4,55,69,40,1719961130,"~/user_management/README.md"
'8  68  0  ~/user_management/create_users.sh
|4,56,68,0,1719960377,"~/user_management/create_users.sh"
'9  4  0  ~/user_management/users.txt
|4,57,4,0,1719959901,"~/user_management/users.txt"

# Jumplist (newest first):
-'  33  0  ~/styles.css
|4,39,33,0,1720000256,"~/styles.css"
-'  32  0  ~/index.html
|4,39,32,0,1720000244,"~/index.html"
-'  32  0  ~/index.html
|4,39,32,0,1720000244,"~/index.html"
-'  4  0  ~/script.js
|4,39,4,0,1719999969,"~/script.js"
-'  4  0  ~/script.js
|4,39,4,0,1719999969,"~/script.js"
-'  4  0  ~/script.js
|4,39,4,0,1719999969,"~/script.js"
-'  4  0  ~/script.js
|4,39,4,0,1719999969,"~/script.js"
-'  1  0  ~/script.js
|4,39,1,0,1719999960,"~/script.js"
-'  1  0  ~/script.js
|4,39,1,0,1719999960,"~/script.js"
-'  1  0  ~/script.js
|4,39,1,0,1719999960,"~/script.js"
-'  1  0  ~/script.js
|4,39,1,0,1719999960,"~/script.js"
-'  33  0  ~/styles.css
|4,39,33,0,1719999941,"~/styles.css"
-'  33  0  ~/styles.css
|4,39,33,0,1719999941,"~/styles.css"
-'  33  0  ~/styles.css
|4,39,33,0,1719999941,"~/styles.css"
-'  33  0  ~/styles.css
|4,39,33,0,1719999941,"~/styles.css"
-'  1  0  ~/styles.css
|4,39,1,0,1719999928,"~/styles.css"
-'  1  0  ~/styles.css
|4,39,1,0,1719999928,"~/styles.css"
-'  1  0  ~/styles.css
|4,39,1,0,1719999928,"~/styles.css"
-'  1  0  ~/styles.css
|4,39,1,0,1719999928,"~/styles.css"
-'  1  0  ~/styles.css
|4,39,1,0,1719999928,"~/styles.css"
-'  32  0  ~/index.html
|4,39,32,0,1719999891,"~/index.html"
-'  32  0  ~/index.html
|4,39,32,0,1719999891,"~/index.html"
-'  32  0  ~/index.html
|4,39,32,0,1719999891,"~/index.html"
-'  32  0  ~/index.html
|4,39,32,0,1719999891,"~/index.html"
-'  32  0  ~/index.html
|4,39,32,0,1719999891,"~/index.html"
-'  32  0  ~/index.html
|4,39,32,0,1719999891,"~/index.html"
-'  32  0  ~/index.html
|4,39,32,0,1719999891,"~/index.html"
-'  32  0  ~/index.html
|4,39,32,0,1719999891,"~/index.html"
-'  1  0  ~/index.html
|4,39,1,0,1719999867,"~/index.html"
-'  1  0  ~/index.html
|4,39,1,0,1719999867,"~/index.html"
-'  1  0  ~/index.html
|4,39,1,0,1719999867,"~/index.html"
-'  1  0  ~/index.html
|4,39,1,0,1719999867,"~/index.html"
-'  1  0  ~/index.html
|4,39,1,0,1719999867,"~/index.html"
-'  1  0  ~/index.html
|4,39,1,0,1719999867,"~/index.html"
-'  1  0  ~/index.html
|4,39,1,0,1719999867,"~/index.html"
-'  1  0  ~/index.html
|4,39,1,0,1719999867,"~/index.html"
-'  1  0  ~/index.html
|4,39,1,0,1719999867,"~/index.html"
-'  1  0  ~/index.html
|4,39,1,0,1719999867,"~/index.html"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  73  0  ~/user_management/README.md
|4,39,73,0,1719996059,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"
-'  69  0  ~/user_management/README.md
|4,39,69,0,1719995969,"~/user_management/README.md"

# History of marks within files (newest to oldest):

> ~/styles.css
	*	1720000249	0
	"	33	0
	^	33	0
	.	32	1
	+	32	1

> ~/index.html
	*	1720000239	0
	"	32	0
	^	32	0
	.	27	34
	+	31	7
	+	11	36
	+	16	32
	+	17	42
	+	18	38
	+	27	34

> ~/script.js
	*	1719999964	0
	"	4	0
	^	4	0
	.	3	3
	+	3	3

> ~/user_management/README.md
	*	1719996051	0
	"	73	0
	^	73	0
	.	73	0
	+	69	40
	+	73	0

> ~/user_management/create_users.sh
	*	1719960372	0
	"	68	0
	^	68	0
	.	67	57
	+	1	11
	+	1	9
	+	1	11
	+	67	57

> ~/user_management/users.txt
	*	1719959886	0
	"	4	0
	^	4	0
	.	3	19
	+	6	19
	+	3	19

> ~/create_users.sh
	*	1719957131	0
	"	36	0
	^	36	0
	.	35	4
	+	1	209
	+	1	62
	+	1	11
	+	35	4

> ~/users.txt
	*	1719955627	0
	"	4	0
	^	4	0
	.	3	20
	+	1	24
	+	3	20

> ~/README.md
	*	1719952540	0
	"	9	0
	^	9	0
	.	8	37
	+	8	37
